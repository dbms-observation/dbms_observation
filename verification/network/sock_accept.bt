#include <linux/in.h>
#include <linux/in6.h>

BEGIN
{
    printf("%-6s %-16s FAM %-16s %-5s %s\n", "PID", "PROCESS", "ADDRESS", "PORT", "RESULT");
    @err2str[0]="Success";
    
    @err2str[EAGAIN] = "EAGAIN";
    @err2str[EBADF] = "EBADF";
    @err2str[ECONNABORTED] = "ECONNABORTED";
    @err2str[EFAULT] = "EFAULT";
    @err2str[EINTR] = "EINTR";
    @err2str[EINVAL] = "EINVAL";
    @err2str[ENFILE] = "ENFILE";
    @err2str[ENOBUFS] = "ENOBUFS";
    @err2str[EMFILE] = "EMFILE";
    @err2str[ENOMEM] = "ENOMEM";
    @err2str[ENOTSOCK] = "ENOTSOCK";
    @err2str[EOPNOTSUPP] = "EOPNOTSUPP";
    @err2str[EPROTO] = "EPROTO";
    @err2str[EPERM] = "EPERM";
}

tracepoint:syscalls:sys_enter_accept,
tracepoint:syscalls:sys_enter_accept4
{
    @sockaddr[tid] = args->upeer_sockaddr;
}

tracepoint:syscalls:sys_exit_accept,
tracepoint:syscalls:sys_exit_accept4
/@sockaddr[tid]/
{
    $sa = (struct sockaddr *) @sockaddr[tid];
    if(sa->sa_family==AF_INET || sa->sa_family==AF_INET6){
        printf("%-6d %-16s %-3d ", pid, comm, sa->sa_family);
        $error = args->ret >0 ? 0 : -args->ret;

        if($sa->sa_family==AF_INET){
            $s = (struct sockaddr_in *) @sockaddr[tid];
            
            $port = ($s->sin_port>>8) | (($s->sin_port<<8) & 0xff00);
            printf("%-16s %-5d %s\n",
                ntop(AF_INET,$s->sin_addr.s_addr),
                $port, @err2str[$error]);
        }else{
            $s6 = (struct sockaddr_in6 *) @sockaddr[tid];
            $port = ($s6->sin6_port>>8) | (($s6->sin6_port<<8) & 0xff00);
            printf("%-16s %-5d %s\n",
                ntop(AF_INET6, $s6->sin6_addr.in6_u.u6_addr8),
                $port, @err2str[$error]);
        }
    }

    delete(@sockaddr[tid]);
}

END
{
    clear(@err2str);
    clear(@sockaddr);
}